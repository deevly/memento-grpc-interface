//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: memento/url.proto

package memento;

@kotlin.jvm.JvmName("-initializelistUrlsByKeywordResponse")
public inline fun listUrlsByKeywordResponse(block: memento.ListUrlsByKeywordResponseKt.Dsl.() -> kotlin.Unit): memento.Url.ListUrlsByKeywordResponse =
  memento.ListUrlsByKeywordResponseKt.Dsl._create(memento.Url.ListUrlsByKeywordResponse.newBuilder()).apply { block() }._build()
public object ListUrlsByKeywordResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: memento.Url.ListUrlsByKeywordResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: memento.Url.ListUrlsByKeywordResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): memento.Url.ListUrlsByKeywordResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class UrlsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .memento.URL urls = 1 [json_name = "urls"];</code>
     */
     public val urls: com.google.protobuf.kotlin.DslList<memento.Types.URL, UrlsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getUrlsList()
      )
    /**
     * <code>repeated .memento.URL urls = 1 [json_name = "urls"];</code>
     * @param value The urls to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addUrls")
    public fun com.google.protobuf.kotlin.DslList<memento.Types.URL, UrlsProxy>.add(value: memento.Types.URL) {
      _builder.addUrls(value)
    }
    /**
     * <code>repeated .memento.URL urls = 1 [json_name = "urls"];</code>
     * @param value The urls to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignUrls")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<memento.Types.URL, UrlsProxy>.plusAssign(value: memento.Types.URL) {
      add(value)
    }
    /**
     * <code>repeated .memento.URL urls = 1 [json_name = "urls"];</code>
     * @param values The urls to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllUrls")
    public fun com.google.protobuf.kotlin.DslList<memento.Types.URL, UrlsProxy>.addAll(values: kotlin.collections.Iterable<memento.Types.URL>) {
      _builder.addAllUrls(values)
    }
    /**
     * <code>repeated .memento.URL urls = 1 [json_name = "urls"];</code>
     * @param values The urls to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllUrls")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<memento.Types.URL, UrlsProxy>.plusAssign(values: kotlin.collections.Iterable<memento.Types.URL>) {
      addAll(values)
    }
    /**
     * <code>repeated .memento.URL urls = 1 [json_name = "urls"];</code>
     * @param index The index to set the value at.
     * @param value The urls to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setUrls")
    public operator fun com.google.protobuf.kotlin.DslList<memento.Types.URL, UrlsProxy>.set(index: kotlin.Int, value: memento.Types.URL) {
      _builder.setUrls(index, value)
    }
    /**
     * <code>repeated .memento.URL urls = 1 [json_name = "urls"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearUrls")
    public fun com.google.protobuf.kotlin.DslList<memento.Types.URL, UrlsProxy>.clear() {
      _builder.clearUrls()
    }


    /**
     * <code>.memento.URLCursor cursor = 2 [json_name = "cursor"];</code>
     */
    public var cursor: memento.Types.URLCursor
      @JvmName("getCursor")
      get() = _builder.getCursor()
      @JvmName("setCursor")
      set(value) {
        _builder.setCursor(value)
      }
    /**
     * <code>.memento.URLCursor cursor = 2 [json_name = "cursor"];</code>
     */
    public fun clearCursor() {
      _builder.clearCursor()
    }
    /**
     * <code>.memento.URLCursor cursor = 2 [json_name = "cursor"];</code>
     * @return Whether the cursor field is set.
     */
    public fun hasCursor(): kotlin.Boolean {
      return _builder.hasCursor()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun memento.Url.ListUrlsByKeywordResponse.copy(block: memento.ListUrlsByKeywordResponseKt.Dsl.() -> kotlin.Unit): memento.Url.ListUrlsByKeywordResponse =
  memento.ListUrlsByKeywordResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val memento.Url.ListUrlsByKeywordResponseOrBuilder.cursorOrNull: memento.Types.URLCursor?
  get() = if (hasCursor()) getCursor() else null

