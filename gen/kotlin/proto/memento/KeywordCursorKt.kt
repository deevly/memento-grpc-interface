//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: memento/types.proto

package memento;

@kotlin.jvm.JvmName("-initializekeywordCursor")
public inline fun keywordCursor(block: memento.KeywordCursorKt.Dsl.() -> kotlin.Unit): memento.Types.KeywordCursor =
  memento.KeywordCursorKt.Dsl._create(memento.Types.KeywordCursor.newBuilder()).apply { block() }._build()
public object KeywordCursorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: memento.Types.KeywordCursor.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: memento.Types.KeywordCursor.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): memento.Types.KeywordCursor = _builder.build()

    /**
     * <code>.memento.KeywordCursor.SortType type = 1 [json_name = "type"];</code>
     */
    public var type: memento.Types.KeywordCursor.SortType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * <code>.memento.KeywordCursor.SortType type = 1 [json_name = "type"];</code>
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * <code>string date = 2 [json_name = "date"];</code>
     */
    public var date: kotlin.String
      @JvmName("getDate")
      get() = _builder.getDate()
      @JvmName("setDate")
      set(value) {
        _builder.setDate(value)
      }
    /**
     * <code>string date = 2 [json_name = "date"];</code>
     */
    public fun clearDate() {
      _builder.clearDate()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun memento.Types.KeywordCursor.copy(block: memento.KeywordCursorKt.Dsl.() -> kotlin.Unit): memento.Types.KeywordCursor =
  memento.KeywordCursorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

